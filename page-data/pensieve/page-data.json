{
    "componentChunkName": "component---src-pages-pensieve-index-js",
    "path": "/pensieve/",
    "result": {"data":{"allMarkdownRemark":{"edges":[{"node":{"frontmatter":{"title":"Go to production with Heroku","description":"Deploy your first app with Heroku in one click.","slug":"/pensieve/heroku","date":"2021-09-28T00:00:00.000Z","tags":["Heroku","Production","Deploy","App","Nodejs","Github","Integration"],"draft":false},"html":"<h1>Go to production with Heroku</h1>\n<h2>Introduction</h2>\n<p>We are going to see in this blog post how you can deploy your first <code class=\"language-text\">nodejs</code> application to <a href=\"https://www.heroku.com/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Heroku</a>. This will allows you to have it online with a custom <code class=\"language-text\">URL</code> if you want.</p>\n<p>Heroku is a simple provider that allows you to deploy any web application. It is faster hence their integration with your Github profile. Is pretty much the same thing that we did previously in the <a href=\"https://hmounir.com/pensieve/netlify\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Netlify</a> blog post.</p>\n<h2>Create a new app</h2>\n<p>Let's start with a new application. You can create a new one on your dashboard, and just follow the lead! Should be very easy! Define the <code class=\"language-text\">name</code> of your application and choose a suitable region.</p>\n<p><span\n      class=\"gatsby-resp-image-wrapper\"\n      style=\"position: relative; display: block; margin-left: auto; margin-right: auto; max-width: 700px; \"\n    >\n      <a\n    class=\"gatsby-resp-image-link\"\n    href=\"/static/b119ce6846d3adb7985552daf874c2e1/56ba3/new.png\"\n    style=\"display: block\"\n    target=\"_blank\"\n    rel=\"noopener\"\n  >\n    <span\n    class=\"gatsby-resp-image-background-image\"\n    style=\"padding-bottom: 54.85714285714286%; position: relative; bottom: 0; left: 0; background-image: url('data:image/svg+xml,%3csvg%20xmlns=\\'http://www.w3.org/2000/svg\\'%20width=\\'400\\'%20height=\\'220\\'%20viewBox=\\'0%200%20400%20220\\'%20preserveAspectRatio=\\'none\\'%3e%3cpath%20d=\\'M25%2060v9l1%208h160l163-1%201-8c0-10-2-10-2%200v8H27V61l161-1%20161-1H187L25%2060m0%20116v9l1%206h51v-16l-26-1H26l-1%202\\'%20fill=\\'%23f34\\'%20fill-rule=\\'evenodd\\'/%3e%3c/svg%3e'); background-size: cover; display: block;\"\n  ></span>\n  <img\n        class=\"gatsby-resp-image-image\"\n        alt=\"New\"\n        title=\"New\"\n        src=\"/static/b119ce6846d3adb7985552daf874c2e1/39600/new.png\"\n        srcset=\"/static/b119ce6846d3adb7985552daf874c2e1/1aaec/new.png 175w,\n/static/b119ce6846d3adb7985552daf874c2e1/98287/new.png 350w,\n/static/b119ce6846d3adb7985552daf874c2e1/39600/new.png 700w,\n/static/b119ce6846d3adb7985552daf874c2e1/57cd1/new.png 1050w,\n/static/b119ce6846d3adb7985552daf874c2e1/4af54/new.png 1400w,\n/static/b119ce6846d3adb7985552daf874c2e1/56ba3/new.png 1542w\"\n        sizes=\"(max-width: 700px) 100vw, 700px\"\n        style=\"width:100%;height:100%;margin:0;vertical-align:middle;position:absolute;top:0;left:0;\"\n        loading=\"lazy\"\n        decoding=\"async\"\n      />\n  </a>\n    </span></p>\n<h2>Repository</h2>\n<p>Once you created your application you can connect it to a GitHub repository which is the aim of the blog post here. Helping you to get the possibility to go into production with simple integration. Of course, you can use the Heroku CLI also to build it in another way.</p>\n<p>We choose here the Github integration which is way cooler.</p>\n<p><span\n      class=\"gatsby-resp-image-wrapper\"\n      style=\"position: relative; display: block; margin-left: auto; margin-right: auto; max-width: 700px; \"\n    >\n      <a\n    class=\"gatsby-resp-image-link\"\n    href=\"/static/a351eed4a681c2e370f588f05bc8a5de/2f09c/repo.png\"\n    style=\"display: block\"\n    target=\"_blank\"\n    rel=\"noopener\"\n  >\n    <span\n    class=\"gatsby-resp-image-background-image\"\n    style=\"padding-bottom: 29.714285714285715%; position: relative; bottom: 0; left: 0; background-image: url('data:image/svg+xml,%3csvg%20xmlns=\\'http://www.w3.org/2000/svg\\'%20width=\\'400\\'%20height=\\'120\\'%20viewBox=\\'0%200%20400%20120\\'%20preserveAspectRatio=\\'none\\'%3e%3cpath%20d=\\'M218%2063a90%2090%200%20000%209l78%201h79V63l-79-1-78%201m1%205v4h133v-9H219v5m-27%2011v2h40l39-1c-1-2-5-2-6-1h-3l-1-1-2%201h-1l-5-1c-3%200-5%200-4%201l-1%201-1-1-2-1h-3c0-1-1-1-1%201h-1l-10-1-10%201h-16l-6-1h-5c-1-1-1%200-1%201\\'%20fill=\\'%23f34\\'%20fill-rule=\\'evenodd\\'/%3e%3c/svg%3e'); background-size: cover; display: block;\"\n  ></span>\n  <img\n        class=\"gatsby-resp-image-image\"\n        alt=\"Repository\"\n        title=\"Repository\"\n        src=\"/static/a351eed4a681c2e370f588f05bc8a5de/39600/repo.png\"\n        srcset=\"/static/a351eed4a681c2e370f588f05bc8a5de/1aaec/repo.png 175w,\n/static/a351eed4a681c2e370f588f05bc8a5de/98287/repo.png 350w,\n/static/a351eed4a681c2e370f588f05bc8a5de/39600/repo.png 700w,\n/static/a351eed4a681c2e370f588f05bc8a5de/57cd1/repo.png 1050w,\n/static/a351eed4a681c2e370f588f05bc8a5de/4af54/repo.png 1400w,\n/static/a351eed4a681c2e370f588f05bc8a5de/2f09c/repo.png 2622w\"\n        sizes=\"(max-width: 700px) 100vw, 700px\"\n        style=\"width:100%;height:100%;margin:0;vertical-align:middle;position:absolute;top:0;left:0;\"\n        loading=\"lazy\"\n        decoding=\"async\"\n      />\n  </a>\n    </span></p>\n<p>Once the connection between Heroku and your Github repository is done, it's there you have an empty application available on the <code class=\"language-text\">dashboard</code>. You can here open the application ( will redirect you to the main URL ).</p>\n<p><span\n      class=\"gatsby-resp-image-wrapper\"\n      style=\"position: relative; display: block; margin-left: auto; margin-right: auto; max-width: 700px; \"\n    >\n      <a\n    class=\"gatsby-resp-image-link\"\n    href=\"/static/81a2cfe9228ebc2b4055788866d41abf/0a88e/openApp.png\"\n    style=\"display: block\"\n    target=\"_blank\"\n    rel=\"noopener\"\n  >\n    <span\n    class=\"gatsby-resp-image-background-image\"\n    style=\"padding-bottom: 6.2857142857142865%; position: relative; bottom: 0; left: 0; background-image: url('data:image/svg+xml,%3csvg%20xmlns=\\'http://www.w3.org/2000/svg\\'%20width=\\'400\\'%20height=\\'26\\'%20viewBox=\\'0%200%20400%2026\\'%20preserveAspectRatio=\\'none\\'/%3e'); background-size: cover; display: block;\"\n  ></span>\n  <img\n        class=\"gatsby-resp-image-image\"\n        alt=\"Open App\"\n        title=\"Open App\"\n        src=\"/static/81a2cfe9228ebc2b4055788866d41abf/39600/openApp.png\"\n        srcset=\"/static/81a2cfe9228ebc2b4055788866d41abf/1aaec/openApp.png 175w,\n/static/81a2cfe9228ebc2b4055788866d41abf/98287/openApp.png 350w,\n/static/81a2cfe9228ebc2b4055788866d41abf/39600/openApp.png 700w,\n/static/81a2cfe9228ebc2b4055788866d41abf/57cd1/openApp.png 1050w,\n/static/81a2cfe9228ebc2b4055788866d41abf/4af54/openApp.png 1400w,\n/static/81a2cfe9228ebc2b4055788866d41abf/0a88e/openApp.png 2472w\"\n        sizes=\"(max-width: 700px) 100vw, 700px\"\n        style=\"width:100%;height:100%;margin:0;vertical-align:middle;position:absolute;top:0;left:0;\"\n        loading=\"lazy\"\n        decoding=\"async\"\n      />\n  </a>\n    </span></p>\n<h2>Config</h2>\n<p>For some applications, you want to add config <code class=\"language-text\">vars</code>. So that on the runtime of your application you use these specific values. It's used most of the time to define for example the <code class=\"language-text\">origins URLs</code>, a port that is using, and more ...</p>\n<p><span\n      class=\"gatsby-resp-image-wrapper\"\n      style=\"position: relative; display: block; margin-left: auto; margin-right: auto; max-width: 700px; \"\n    >\n      <a\n    class=\"gatsby-resp-image-link\"\n    href=\"/static/3a3de974db0a595a8f01db1f6fd7b88c/6c5be/config.png\"\n    style=\"display: block\"\n    target=\"_blank\"\n    rel=\"noopener\"\n  >\n    <span\n    class=\"gatsby-resp-image-background-image\"\n    style=\"padding-bottom: 23.428571428571427%; position: relative; bottom: 0; left: 0; background-image: url('data:image/svg+xml,%3csvg%20xmlns=\\'http://www.w3.org/2000/svg\\'%20width=\\'400\\'%20height=\\'93\\'%20viewBox=\\'0%200%20400%2093\\'%20preserveAspectRatio=\\'none\\'%3e%3cpath%20d=\\'M225%2042c0%202%200%202%2018%202%2023%201%2027%200%2027-2l-4-1c-3%200-4%200-3%201h-3c-1-2-9-1-10%200h-2c1-2-10-2-11%200h-1l-5-1h-5c-1-1-1-1-1%201\\'%20fill=\\'%23f34\\'%20fill-rule=\\'evenodd\\'/%3e%3c/svg%3e'); background-size: cover; display: block;\"\n  ></span>\n  <img\n        class=\"gatsby-resp-image-image\"\n        alt=\"Config\"\n        title=\"Config\"\n        src=\"/static/3a3de974db0a595a8f01db1f6fd7b88c/39600/config.png\"\n        srcset=\"/static/3a3de974db0a595a8f01db1f6fd7b88c/1aaec/config.png 175w,\n/static/3a3de974db0a595a8f01db1f6fd7b88c/98287/config.png 350w,\n/static/3a3de974db0a595a8f01db1f6fd7b88c/39600/config.png 700w,\n/static/3a3de974db0a595a8f01db1f6fd7b88c/57cd1/config.png 1050w,\n/static/3a3de974db0a595a8f01db1f6fd7b88c/4af54/config.png 1400w,\n/static/3a3de974db0a595a8f01db1f6fd7b88c/6c5be/config.png 2506w\"\n        sizes=\"(max-width: 700px) 100vw, 700px\"\n        style=\"width:100%;height:100%;margin:0;vertical-align:middle;position:absolute;top:0;left:0;\"\n        loading=\"lazy\"\n        decoding=\"async\"\n      />\n  </a>\n    </span></p>\n<h2>Logs</h2>\n<p>Heroku has a nice view of logs. You can find them there and also be able to export them and see what happened during the time the application crashes.</p>\n<p><span\n      class=\"gatsby-resp-image-wrapper\"\n      style=\"position: relative; display: block; margin-left: auto; margin-right: auto; max-width: 496px; \"\n    >\n      <a\n    class=\"gatsby-resp-image-link\"\n    href=\"/static/61227e2d3873cedd2a58300a9fc6c893/07e2a/logs.png\"\n    style=\"display: block\"\n    target=\"_blank\"\n    rel=\"noopener\"\n  >\n    <span\n    class=\"gatsby-resp-image-background-image\"\n    style=\"padding-bottom: 114.28571428571428%; position: relative; bottom: 0; left: 0; background-image: url('data:image/svg+xml,%3csvg%20xmlns=\\'http://www.w3.org/2000/svg\\'%20width=\\'400\\'%20height=\\'456\\'%20viewBox=\\'0%200%20400%20456\\'%20preserveAspectRatio=\\'none\\'%3e%3cpath%20d=\\'M65%2018c-2%202-2%203-2%2024v22l3%202c4%203%20142%203%20146%200s4-43%201-47l-2-3h-72c-71%200-72%200-74%202m168-1c-3%202-3%205-3%2025%200%2021%200%2021%202%2024l3%202h116l2-2c2-3%202-3%202-24%200-18%200-22-2-24l-1-2h-59l-60%201M66%2019l-1%2023c0%2021%200%2022%202%2023l72%201c67%200%2071%200%2072-2%202-2%203-41%201-44-1-2-3-2-73-2l-73%201m167%201l-1%2022c0%2019%200%2020%202%2022s3%202%2059%202c50%200%2057%200%2058-2%202-2%203-43%201-45l-60-1c-56%200-58%200-59%202M12%2035c-1%203-1%203-5%203-5%200-6%201-2%204%203%202%204%204%202%207-2%204-1%204%203%201l4-2%204%202c4%204%205%203%202-1l-1-4%203-3c4-3%204-4-1-4-4%200-5-1-5-4-2-4-3-4-4%201m80%200c-3%203-3%208%200%2011%204%205%2013%202%2013-5s-8-11-13-6m166%205c0%206%200%208%202%208l1-5v-4l2%204c3%206%204%206%207%200l2-5v5c0%204%200%205%202%205l1-7c0-8%200-8-2-8s-3%201-4%205c-2%206-3%206-5%200-1-3-2-5-4-5s-2%200-2%207m-150%205l1%208%201-2c0-3%200-3%203-3s5-2%205-6-2-5-6-5h-4v8m56%200c0%206%200%208%202%208l1-2c0-3%200-3%203-3%204%200%206-5%204-8-2-2-3-3-6-3h-4v8m13%200c0%206%200%208%202%208l1-2c0-3%200-3%203-3%204%200%206-4%204-8%200-2-1-3-5-3h-5v8m101-6c-2%204-1%206%202%208l3%202%203-2c5-3%203-10-3-10l-5%202m-115%2066c-2%201-2%202-1%204v6c-2%204%204%207%207%204%203-2%202-5-2-6-4%200-4-2%200-2%202-1%203-1%203-3l1-3%201-1c-1-2-8-1-9%201m9%2049v7h4c4%200%206-1%206-6%200-3-2-5-5-5-3%201-3%201-3-1l-1-3-1%208M51%20211c-2%201-1%2016%200%2017%202%202%2020%201%2021-1v-15c0-2-20-3-21-1m41%208l1%207%201-3c0-4%202-4%205%200s4%203%202%200-2-3%200-4c3-3%200-8-5-8h-4v8m-40-4v12h19v-12l-10-1-9%201m4%2041c-3%200-4%202-4%2012l1%209h18v-10l-1-10c-2-1-10-2-14-1m37%202v14l1-2c0-2%201-3%203-3%206%200%207-7%202-9h-6m40%200l-1%202c0%202%200%202-2%201-5-1-8%207-4%2010%201%202%202%202%204%201%204%200%204%200%204-8l-1-6m-80%202v9l1%207h15v-16l-8-1-8%201m6%2065c-4%202-4%202-4%207s1%206%205%208l4%202%205-2c4-2%205-3%205-8s0-5-4-7c-4-4-6-4-11%200m54-1l-2%202c-5%200-7%205-5%209%201%202%202%202%205%202h4v-8c0-7-1-9-2-5m14%200c0%202%200%203-3%202-4-1-7%204-5%209%201%202%202%202%205%202h5l-1-6c0-8-1-11-1-7m36%203l1%2015%201-2c0-3%200-3%203-3%204%200%206-4%204-8%200-2-1-3-5-3l-4%201m18%207l1%208%201-3c0-2%200-3%203-2%203%200%205-2%205-5%200-5-2-6-6-6h-4v8M57%20388c-6%203-7%209-2%2014%204%205%2011%204%2014-2%203-4%201-4-3%200-3%203-7%203-10-1-3-3-3-4%200-7s9-4%208-1c0%201%201%202%203%201%204%200%204%200%203-3s-3-4-3-2h-3c-3-1-4-1-7%201m36-1v14l1-2c0-4%202-4%205%200s4%203%202-1v-3c2-2%201-6-1-7-3-2-6-3-7-1m108%202c0%202%200%202-2%202-4-2-8%203-6%207%201%203%205%205%206%203h3c1%200%202-13%200-14-1-1-1%200-1%202m29%203l-2%204c0%202%203%206%205%206%203%200%206-3%206-6%200-5-5-8-9-4\\'%20fill=\\'%23f34\\'%20fill-rule=\\'evenodd\\'/%3e%3c/svg%3e'); background-size: cover; display: block;\"\n  ></span>\n  <img\n        class=\"gatsby-resp-image-image\"\n        alt=\"Logs\"\n        title=\"Logs\"\n        src=\"/static/61227e2d3873cedd2a58300a9fc6c893/07e2a/logs.png\"\n        srcset=\"/static/61227e2d3873cedd2a58300a9fc6c893/1aaec/logs.png 175w,\n/static/61227e2d3873cedd2a58300a9fc6c893/98287/logs.png 350w,\n/static/61227e2d3873cedd2a58300a9fc6c893/07e2a/logs.png 496w\"\n        sizes=\"(max-width: 496px) 100vw, 496px\"\n        style=\"width:100%;height:100%;margin:0;vertical-align:middle;position:absolute;top:0;left:0;\"\n        loading=\"lazy\"\n        decoding=\"async\"\n      />\n  </a>\n    </span></p>\n<h2>Buildpack</h2>\n<p>To build your application Heroku needs to know which kind of build pack there are going to use. Here for example we have the last application that we did on the <a href=\"https://hmounir.com/pensieve/validation\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">validation blog post</a>.</p>\n<p><span\n      class=\"gatsby-resp-image-wrapper\"\n      style=\"position: relative; display: block; margin-left: auto; margin-right: auto; max-width: 700px; \"\n    >\n      <a\n    class=\"gatsby-resp-image-link\"\n    href=\"/static/ac153443d3c39b7a5704eeb34741cfef/0045d/build.png\"\n    style=\"display: block\"\n    target=\"_blank\"\n    rel=\"noopener\"\n  >\n    <span\n    class=\"gatsby-resp-image-background-image\"\n    style=\"padding-bottom: 17.71428571428571%; position: relative; bottom: 0; left: 0; background-image: url('data:image/svg+xml,%3csvg%20xmlns=\\'http://www.w3.org/2000/svg\\'%20width=\\'400\\'%20height=\\'70\\'%20viewBox=\\'0%200%20400%2070\\'%20preserveAspectRatio=\\'none\\'%3e%3cpath%20d=\\'M354%2020l1%206h40V15h-41v5\\'%20fill=\\'%23f34\\'%20fill-rule=\\'evenodd\\'/%3e%3c/svg%3e'); background-size: cover; display: block;\"\n  ></span>\n  <img\n        class=\"gatsby-resp-image-image\"\n        alt=\"Build\"\n        title=\"Build\"\n        src=\"/static/ac153443d3c39b7a5704eeb34741cfef/39600/build.png\"\n        srcset=\"/static/ac153443d3c39b7a5704eeb34741cfef/1aaec/build.png 175w,\n/static/ac153443d3c39b7a5704eeb34741cfef/98287/build.png 350w,\n/static/ac153443d3c39b7a5704eeb34741cfef/39600/build.png 700w,\n/static/ac153443d3c39b7a5704eeb34741cfef/57cd1/build.png 1050w,\n/static/ac153443d3c39b7a5704eeb34741cfef/4af54/build.png 1400w,\n/static/ac153443d3c39b7a5704eeb34741cfef/0045d/build.png 2430w\"\n        sizes=\"(max-width: 700px) 100vw, 700px\"\n        style=\"width:100%;height:100%;margin:0;vertical-align:middle;position:absolute;top:0;left:0;\"\n        loading=\"lazy\"\n        decoding=\"async\"\n      />\n  </a>\n    </span></p>\n<p>It's a nodejs application so let's use the nodejs one.</p>\n<p><span\n      class=\"gatsby-resp-image-wrapper\"\n      style=\"position: relative; display: block; margin-left: auto; margin-right: auto; max-width: 700px; \"\n    >\n      <a\n    class=\"gatsby-resp-image-link\"\n    href=\"/static/a5bc87ffbd52619d08baa98d35fe2a84/acdd1/nodejs.png\"\n    style=\"display: block\"\n    target=\"_blank\"\n    rel=\"noopener\"\n  >\n    <span\n    class=\"gatsby-resp-image-background-image\"\n    style=\"padding-bottom: 53.14285714285714%; position: relative; bottom: 0; left: 0; background-image: url('data:image/svg+xml,%3csvg%20xmlns=\\'http://www.w3.org/2000/svg\\'%20width=\\'400\\'%20height=\\'214\\'%20viewBox=\\'0%200%20400%20214\\'%20preserveAspectRatio=\\'none\\'%3e%3cpath%20d=\\'M40%20111c-4%202-4%203-4%208%200%204%200%205%202%206%203%201%205%200%205-2s0-2%202-1h5c2-2%201-4-2-4l-2-1h2l2-1c0-2-5-1-6%201l3%202c3%201%202%202-1%202-2-1-3-2-3-4%200-4-1-2-1%203-1%205-3%205-4-1%200-4%200-5%204-7l3-2%204%202c4%202%204%203%204%206%200%204%200%205-4%207l-5%201-2%201c1%202%204%201%208-1s4-2%204-7c0-6%200-6-4-8-5-2-6-2-10%200m78-1l-1%202-2%202c-2%200-4%204-2%207%201%202%203%203%203%200%201-1%201%200%201%202l2%204c3%201%207%200%207-3l2-1c2%200%204-5%202-8l-2-2c-1%201-2%200-2-1-1-3-7-4-8-2m155%201c-3%202-5%205-7%209%200%203%203%205%2011%206l5%201%202-6c2-7%202-9-2-10h-9m-80%202c-6%203-5%209%202%2011%2011%203%2019-6%209-11h-11m79%2048c-4%201-3%202%202%202%203%200%204%200%203%201l-2%201-1%201h-3c1-3-1-2-3%200-6%206%207%2017%2014%2011l3-2h-6l-7-1h2l3-1h4c1%202%205-1%205-4%200-6-8-11-14-8m-70%200l-6%201c-4%200-5%205%200%205h3l-3%201c-3%201-4%205-1%205l3%201h-3c-1%200-2%201-2%203s0%202%205%202c7-2%207-1%207-11v-8l-3%201m-76%201l2%201c2%201%202%201%201%203h-5c-3-2-8-2-8%200l-2%203c-2%202-3%208-1%208l2-1h9l2%201c3-5%206-12%205-14s-5-3-5-1\\'%20fill=\\'%23f34\\'%20fill-rule=\\'evenodd\\'/%3e%3c/svg%3e'); background-size: cover; display: block;\"\n  ></span>\n  <img\n        class=\"gatsby-resp-image-image\"\n        alt=\"Nodejs\"\n        title=\"Nodejs\"\n        src=\"/static/a5bc87ffbd52619d08baa98d35fe2a84/39600/nodejs.png\"\n        srcset=\"/static/a5bc87ffbd52619d08baa98d35fe2a84/1aaec/nodejs.png 175w,\n/static/a5bc87ffbd52619d08baa98d35fe2a84/98287/nodejs.png 350w,\n/static/a5bc87ffbd52619d08baa98d35fe2a84/39600/nodejs.png 700w,\n/static/a5bc87ffbd52619d08baa98d35fe2a84/57cd1/nodejs.png 1050w,\n/static/a5bc87ffbd52619d08baa98d35fe2a84/acdd1/nodejs.png 1150w\"\n        sizes=\"(max-width: 700px) 100vw, 700px\"\n        style=\"width:100%;height:100%;margin:0;vertical-align:middle;position:absolute;top:0;left:0;\"\n        loading=\"lazy\"\n        decoding=\"async\"\n      />\n  </a>\n    </span></p>\n<h2>Domain</h2>\n<p>Of course, you can define your custom domains. To have it on the URL and be 100% professional.</p>\n<p><span\n      class=\"gatsby-resp-image-wrapper\"\n      style=\"position: relative; display: block; margin-left: auto; margin-right: auto; max-width: 700px; \"\n    >\n      <a\n    class=\"gatsby-resp-image-link\"\n    href=\"/static/4ea280d343ff82d7c9d97551b2843da4/f59cd/domain.png\"\n    style=\"display: block\"\n    target=\"_blank\"\n    rel=\"noopener\"\n  >\n    <span\n    class=\"gatsby-resp-image-background-image\"\n    style=\"padding-bottom: 24.571428571428573%; position: relative; bottom: 0; left: 0; background-image: url('data:image/svg+xml,%3csvg%20xmlns=\\'http://www.w3.org/2000/svg\\'%20width=\\'400\\'%20height=\\'99\\'%20viewBox=\\'0%200%20400%2099\\'%20preserveAspectRatio=\\'none\\'%3e%3cpath%20d=\\'M359%2019l1%206h35V14h-36v5m-167%201c0%201%204%202%2041%202%2040%200%2040%200%2038-2s-7-3-7-1l-2%201-2-1-3-1-4%201h-2c-6-1-10-1-12%201h-1v-2l-1%202-1%201c-1-3-11-3-13-1h-1v-2l-1%202h-1c-1-2-11-2-11%200h-2l-2-1h-2c-3-1-11-1-11%201\\'%20fill=\\'%23f34\\'%20fill-rule=\\'evenodd\\'/%3e%3c/svg%3e'); background-size: cover; display: block;\"\n  ></span>\n  <img\n        class=\"gatsby-resp-image-image\"\n        alt=\"Domain\"\n        title=\"Domain\"\n        src=\"/static/4ea280d343ff82d7c9d97551b2843da4/39600/domain.png\"\n        srcset=\"/static/4ea280d343ff82d7c9d97551b2843da4/1aaec/domain.png 175w,\n/static/4ea280d343ff82d7c9d97551b2843da4/98287/domain.png 350w,\n/static/4ea280d343ff82d7c9d97551b2843da4/39600/domain.png 700w,\n/static/4ea280d343ff82d7c9d97551b2843da4/57cd1/domain.png 1050w,\n/static/4ea280d343ff82d7c9d97551b2843da4/4af54/domain.png 1400w,\n/static/4ea280d343ff82d7c9d97551b2843da4/f59cd/domain.png 2460w\"\n        sizes=\"(max-width: 700px) 100vw, 700px\"\n        style=\"width:100%;height:100%;margin:0;vertical-align:middle;position:absolute;top:0;left:0;\"\n        loading=\"lazy\"\n        decoding=\"async\"\n      />\n  </a>\n    </span></p>\n<h2>Deploy</h2>\n<p>This section allows you to deploy any branch that you want manually. Here we chose the <code class=\"language-text\">master</code> because we only want to deploy the main branch. but imagine you have a <code class=\"language-text\">feature</code> branch you can too.</p>\n<p><span\n      class=\"gatsby-resp-image-wrapper\"\n      style=\"position: relative; display: block; margin-left: auto; margin-right: auto; max-width: 700px; \"\n    >\n      <a\n    class=\"gatsby-resp-image-link\"\n    href=\"/static/dc8e12283a5913ce1a081ad6b79ca52c/9b0bc/manual.png\"\n    style=\"display: block\"\n    target=\"_blank\"\n    rel=\"noopener\"\n  >\n    <span\n    class=\"gatsby-resp-image-background-image\"\n    style=\"padding-bottom: 18.857142857142858%; position: relative; bottom: 0; left: 0; background-image: url('data:image/svg+xml,%3csvg%20xmlns=\\'http://www.w3.org/2000/svg\\'%20width=\\'400\\'%20height=\\'76\\'%20viewBox=\\'0%200%20400%2076\\'%20preserveAspectRatio=\\'none\\'%3e%3cpath%20d=\\'M321%2043v6l1%205h48V42h-24l-25%201\\'%20fill=\\'%23f34\\'%20fill-rule=\\'evenodd\\'/%3e%3c/svg%3e'); background-size: cover; display: block;\"\n  ></span>\n  <img\n        class=\"gatsby-resp-image-image\"\n        alt=\"Manual Deploy\"\n        title=\"Manual Deploy\"\n        src=\"/static/dc8e12283a5913ce1a081ad6b79ca52c/39600/manual.png\"\n        srcset=\"/static/dc8e12283a5913ce1a081ad6b79ca52c/1aaec/manual.png 175w,\n/static/dc8e12283a5913ce1a081ad6b79ca52c/98287/manual.png 350w,\n/static/dc8e12283a5913ce1a081ad6b79ca52c/39600/manual.png 700w,\n/static/dc8e12283a5913ce1a081ad6b79ca52c/57cd1/manual.png 1050w,\n/static/dc8e12283a5913ce1a081ad6b79ca52c/4af54/manual.png 1400w,\n/static/dc8e12283a5913ce1a081ad6b79ca52c/9b0bc/manual.png 2096w\"\n        sizes=\"(max-width: 700px) 100vw, 700px\"\n        style=\"width:100%;height:100%;margin:0;vertical-align:middle;position:absolute;top:0;left:0;\"\n        loading=\"lazy\"\n        decoding=\"async\"\n      />\n  </a>\n    </span></p>\n<h2>Automatic Deploy</h2>\n<p>Automatic deployment can be awesome and be such a gain of time. I always use it. Once you merge your feature branch into master, making a release, it will automatically deploy it to production.</p>\n<p><span\n      class=\"gatsby-resp-image-wrapper\"\n      style=\"position: relative; display: block; margin-left: auto; margin-right: auto; max-width: 700px; \"\n    >\n      <a\n    class=\"gatsby-resp-image-link\"\n    href=\"/static/e43a9f4251d871e0b49dec60ef965755/e987f/deploy.png\"\n    style=\"display: block\"\n    target=\"_blank\"\n    rel=\"noopener\"\n  >\n    <span\n    class=\"gatsby-resp-image-background-image\"\n    style=\"padding-bottom: 29.714285714285715%; position: relative; bottom: 0; left: 0; background-image: url('data:image/svg+xml,%3csvg%20xmlns=\\'http://www.w3.org/2000/svg\\'%20width=\\'400\\'%20height=\\'118\\'%20viewBox=\\'0%200%20400%20118\\'%20preserveAspectRatio=\\'none\\'%3e%3cpath%20d=\\'M137%20100v6l1%204h69v-10l-35-1-35%201\\'%20fill=\\'%23f34\\'%20fill-rule=\\'evenodd\\'/%3e%3c/svg%3e'); background-size: cover; display: block;\"\n  ></span>\n  <img\n        class=\"gatsby-resp-image-image\"\n        alt=\"Deploy\"\n        title=\"Deploy\"\n        src=\"/static/e43a9f4251d871e0b49dec60ef965755/39600/deploy.png\"\n        srcset=\"/static/e43a9f4251d871e0b49dec60ef965755/1aaec/deploy.png 175w,\n/static/e43a9f4251d871e0b49dec60ef965755/98287/deploy.png 350w,\n/static/e43a9f4251d871e0b49dec60ef965755/39600/deploy.png 700w,\n/static/e43a9f4251d871e0b49dec60ef965755/57cd1/deploy.png 1050w,\n/static/e43a9f4251d871e0b49dec60ef965755/4af54/deploy.png 1400w,\n/static/e43a9f4251d871e0b49dec60ef965755/e987f/deploy.png 2412w\"\n        sizes=\"(max-width: 700px) 100vw, 700px\"\n        style=\"width:100%;height:100%;margin:0;vertical-align:middle;position:absolute;top:0;left:0;\"\n        loading=\"lazy\"\n        decoding=\"async\"\n      />\n  </a>\n    </span></p>\n<h2>Procfile</h2>\n<p>To start your application Heroku needs to know how they will start it once the build is done. For a web application, you can define it as the example below.</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\">web: <span class=\"token function\">yarn</span> start</code></pre></div>\n<h2>Slug</h2>\n<p>Sometimes your application or even your repository contains some data that you don't necessarily need to be on the slug of your application. For example, a folder containing logs that you don't use on your application. If they are on your repository they will be added to the build and push to production.</p>\n<p>There is a way to ignore them, you can simply add the path to the file <code class=\"language-text\">.slugignore</code>.</p>\n<p>Example :</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\">/logs</code></pre></div>\n<h2>Source</h2>\n<p><a href=\"https://github.com/hamzaPixl/posts-heroku\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Github</a></p>\n<p><a href=\"https://hmounir.com/pensieve/heroku\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Blog</a></p>\n<p><a href=\"https://www.heroku.com/home\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Heroku</a></p>\n<h2>License</h2>\n<p>Distributed under the MIT License. See <code class=\"language-text\">LICENSE</code> for more information.</p>\n<h2>Contact</h2>\n<p>Hamza Mounir - <a href=\"https://twitter.com/pixlhamza\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">@pixlhamza</a> - <a href=\"mailto:hamza.pixelle@gmail.com\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">hamza.pixelle@gmail.com</a></p>\n<h2>Support</h2>\n<p>Give a ⭐️ if you like this post!</p>"}},{"node":{"frontmatter":{"title":"How to validate your input","description":"How to do validation for you REST application.","slug":"/pensieve/validation","date":"2021-08-21T00:00:00.000Z","tags":["Validation","Ajv","Input","REST"],"draft":false},"html":"<h1>How to validate your input</h1>\n<h2>Introduction</h2>\n<p>Data data data, you can store them use them as value, and build great things from it. What if your data are not reliable anymore? Your business has one thing that needs to be reliable: the <code class=\"language-text\">data</code> that you store.</p>\n<p>You need to validate your input before using it. Where are going to see here how you can do it properly for a REST API. So you can imagine building a business that saves claims and you want that some fields are required, match a pattern and more. You can validate everything so that the data that are coming to your application is reliable and with the format you want.</p>\n<h2>Dependencies</h2>\n<p>Install the dependencies:</p>\n<ul>\n<li><a href=\"https://ajv.js.org/guide/getting-started.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">ajv</a></li>\n<li><a href=\"https://expressjs.com/en/5x/api.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">express</a></li>\n<li><a href=\"https://github.com/expressjs/body-parser\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">body-parser</a></li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token function\">npm</span> <span class=\"token function\">install</span> express ajv body-parser</code></pre></div>\n<p>We are going to use <code class=\"language-text\">ajv</code> for the validation part itself.\r\nFor the REST API itself self we are going to use <code class=\"language-text\">express</code> and add a simple route where we will attach the validation.</p>\n<h2>Server</h2>\n<p>Let's create a simple server to add a route to it and use it for the entry of our validation.</p>\n<p>Add the <code class=\"language-text\">express</code> dependency and create the server instance.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> express <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'express'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token keyword\">const</span> bodyParser <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'body-parser'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token keyword\">const</span> app <span class=\"token operator\">=</span> <span class=\"token function\">express</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>For the <code class=\"language-text\">port</code> note that we have the <code class=\"language-text\">or</code> here because this application will be deployed via <code class=\"language-text\">Heroku</code>, and they will give you a specific port for your app.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> port <span class=\"token operator\">=</span> process<span class=\"token punctuation\">.</span>env <span class=\"token operator\">||</span> <span class=\"token number\">3000</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>To start the server you can use the function <code class=\"language-text\">listen</code> on your instance and providing the <code class=\"language-text\">port</code> and a <code class=\"language-text\">callback</code> function that will be called after the server starts.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">app<span class=\"token punctuation\">.</span><span class=\"token function\">use</span><span class=\"token punctuation\">(</span>bodyParser<span class=\"token punctuation\">.</span><span class=\"token function\">json</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\napp<span class=\"token punctuation\">.</span><span class=\"token function\">use</span><span class=\"token punctuation\">(</span>bodyParser<span class=\"token punctuation\">.</span><span class=\"token function\">raw</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\napp<span class=\"token punctuation\">.</span><span class=\"token function\">listen</span><span class=\"token punctuation\">(</span>port<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\r\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Server listening at http://localhost:</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>port<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h2>Route</h2>\n<p>Let's add a <code class=\"language-text\">POST</code> route where we are going to capture to data we want to validate. And also respond with the validation errors or if it's valid.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">app<span class=\"token punctuation\">.</span><span class=\"token function\">post</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">req<span class=\"token punctuation\">,</span> res</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\r\n  <span class=\"token keyword\">const</span> input <span class=\"token operator\">=</span> req<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">;</span>\r\n  <span class=\"token keyword\">const</span> result <span class=\"token operator\">=</span> <span class=\"token function\">isValid</span><span class=\"token punctuation\">(</span>input<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n  <span class=\"token keyword\">return</span> res<span class=\"token punctuation\">.</span><span class=\"token function\">send</span><span class=\"token punctuation\">(</span>result <span class=\"token operator\">?</span> <span class=\"token string\">\"It's valid\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"It's not\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>You can see that we take the <code class=\"language-text\">body</code> from the request which we are going to use as input for validation.</p>\n<p>We also have this function that we will detail later: <code class=\"language-text\">isValid</code>. After the validation, we respond with <code class=\"language-text\">It's valid</code> or not depending on the case.</p>\n<h2>Validation</h2>\n<p>Add the <code class=\"language-text\">ajv</code> dependency and create the validator.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> Ajv <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'ajv'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token keyword\">const</span> ajv <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Ajv</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>For the validation, we need to create what we call a <code class=\"language-text\">schema</code> where you define the validation on your payload.</p>\n<p>We are going to create a simple schema for a foo bar object type. Just to understand the mechanism.</p>\n<h3>Schema</h3>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> schema <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\r\n  type<span class=\"token operator\">:</span> <span class=\"token string\">'object'</span><span class=\"token punctuation\">,</span>\r\n  properties<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\r\n    foo<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> type<span class=\"token operator\">:</span> <span class=\"token string\">'integer'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\r\n    bar<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> type<span class=\"token operator\">:</span> <span class=\"token string\">'string'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\r\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\r\n  required<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'foo'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\r\n  additionalProperties<span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\r\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>So the object needs to have only <code class=\"language-text\">2 properties</code> and no additional one.</p>\n<ul>\n<li>Foo: will be an <code class=\"language-text\">integer</code> and will also be <code class=\"language-text\">required</code>.</li>\n<li>Bar: will be a simple <code class=\"language-text\">string</code> and not required.</li>\n</ul>\n<h3>Validate</h3>\n<p>Let's implement the <code class=\"language-text\">isValid</code> function we talked about before. We are going to change a bit and add a <code class=\"language-text\">schema</code> as a parameter to validate the input we pass to it.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">isValid</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">input<span class=\"token punctuation\">,</span> schema</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n  <span class=\"token keyword\">const</span> validate <span class=\"token operator\">=</span> ajv<span class=\"token punctuation\">.</span><span class=\"token function\">compile</span><span class=\"token punctuation\">(</span>schema<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n  <span class=\"token keyword\">const</span> valid <span class=\"token operator\">=</span> <span class=\"token function\">validate</span><span class=\"token punctuation\">(</span>input<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>valid<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n    <span class=\"token keyword\">return</span> validate<span class=\"token punctuation\">.</span>errors<span class=\"token punctuation\">;</span>\r\n  <span class=\"token punctuation\">}</span>\r\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span> valid<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2>Postman</h2>\n<p>We are going to test the validator with a simple call and posting an <code class=\"language-text\">empty object</code> to see the errors.</p>\n<div class=\"gatsby-highlight\" data-language=\"curl\"><pre class=\"language-curl\"><code class=\"language-curl\">curl --location --request POST &#39;http://localhost:3000/&#39; \\\r\n--header &#39;Content-Type: application/json&#39; \\\r\n--data-raw &#39;{}&#39;</code></pre></div>\n<p>Response :</p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">[</span>\r\n  <span class=\"token punctuation\">{</span>\r\n    <span class=\"token property\">\"instancePath\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">,</span>\r\n    <span class=\"token property\">\"schemaPath\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"#/required\"</span><span class=\"token punctuation\">,</span>\r\n    <span class=\"token property\">\"keyword\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"required\"</span><span class=\"token punctuation\">,</span>\r\n    <span class=\"token property\">\"params\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\r\n      <span class=\"token property\">\"missingProperty\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"foo\"</span>\r\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\r\n    <span class=\"token property\">\"message\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"must have required property 'foo'\"</span>\r\n  <span class=\"token punctuation\">}</span>\r\n<span class=\"token punctuation\">]</span></code></pre></div>\n<p>Here is an example with a <code class=\"language-text\">valid</code> payload.</p>\n<div class=\"gatsby-highlight\" data-language=\"curl\"><pre class=\"language-curl\"><code class=\"language-curl\">curl --location --request POST &#39;http://localhost:3000/&#39; \\\r\n--header &#39;Content-Type: application/json&#39; \\\r\n--data-raw &#39;{\r\n    &quot;foo&quot;: 1,\r\n    &quot;bar&quot;: &quot;bar&quot;\r\n}&#39;</code></pre></div>\n<p>Response :</p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\r\n  <span class=\"token property\">\"valid\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span>\r\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2>Middleware</h2>\n<p>Developers are lazy persons right? We like automation we don't want to write this for all kinds of <code class=\"language-text\">validation</code>. To repeat and isolate the process we are going to create a <code class=\"language-text\">middleware</code> that we could attach to any route to have a validation on early stage.\r\nTo have a scalable way to add schema validation we can separate here 3 things :</p>\n<ul>\n<li>The <code class=\"language-text\">middleware</code> for the validation only.</li>\n<li>The <code class=\"language-text\">validator</code> is generic for all schemas.</li>\n<li>The <code class=\"language-text\">schema</code> for the type of input.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\r\n  <span class=\"token property\">\"code\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"VALIDATION_ERROR\"</span><span class=\"token punctuation\">,</span>\r\n  <span class=\"token property\">\"message\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Validation of the payload \"</span><span class=\"token punctuation\">,</span>\r\n  <span class=\"token property\">\"details\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\r\n    <span class=\"token punctuation\">{</span>\r\n      <span class=\"token property\">\"instancePath\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">,</span>\r\n      <span class=\"token property\">\"schemaPath\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"#/required\"</span><span class=\"token punctuation\">,</span>\r\n      <span class=\"token property\">\"keyword\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"required\"</span><span class=\"token punctuation\">,</span>\r\n      <span class=\"token property\">\"params\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\r\n        <span class=\"token property\">\"missingProperty\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"foo\"</span>\r\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\r\n      <span class=\"token property\">\"message\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"must have required property 'foo'\"</span>\r\n    <span class=\"token punctuation\">}</span>\r\n  <span class=\"token punctuation\">]</span>\r\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>For the <code class=\"language-text\">schema</code> we create a file for it <code class=\"language-text\">./schemas/foo.js</code>.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">module<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\r\n  type<span class=\"token operator\">:</span> <span class=\"token string\">'object'</span><span class=\"token punctuation\">,</span>\r\n  properties<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\r\n    foo<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> type<span class=\"token operator\">:</span> <span class=\"token string\">'integer'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\r\n    bar<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> type<span class=\"token operator\">:</span> <span class=\"token string\">'string'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\r\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\r\n  required<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'foo'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\r\n  additionalProperties<span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\r\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>For the <code class=\"language-text\">middleware</code> we create a file for it <code class=\"language-text\">./middlewares/validator.js</code>.\r\nHere you pass the <code class=\"language-text\">schema</code> as a <code class=\"language-text\">parameter</code> that is used to validate the <code class=\"language-text\">req.body</code>.\r\nIf the validation fails we send a <code class=\"language-text\">404</code> error with a nice <code class=\"language-text\">code</code> and a <code class=\"language-text\">message</code> and the <code class=\"language-text\">details</code> of why it failed.\r\nWhen everything went good it just passes to the next function. To read more about <a href=\"http://expressjs.com/en/guide/using-middleware.html#using-middleware\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">middleware</a>.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> isValid <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'../utils/validator'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\nmodule<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">exports</span> <span class=\"token operator\">=</span> <span class=\"token parameter\">schema</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">req<span class=\"token punctuation\">,</span> res<span class=\"token punctuation\">,</span> next</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\r\n  <span class=\"token keyword\">const</span> result <span class=\"token operator\">=</span> <span class=\"token function\">isValid</span><span class=\"token punctuation\">(</span>req<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">,</span> schema<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>Array<span class=\"token punctuation\">.</span><span class=\"token function\">isArray</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n    <span class=\"token comment\">// array means we have errors</span>\r\n    <span class=\"token keyword\">return</span> res<span class=\"token punctuation\">.</span><span class=\"token function\">status</span><span class=\"token punctuation\">(</span><span class=\"token number\">404</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">send</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\r\n      code<span class=\"token operator\">:</span> <span class=\"token string\">'VALIDATION_ERROR'</span><span class=\"token punctuation\">,</span>\r\n      message<span class=\"token operator\">:</span> <span class=\"token string\">'Validation of the payload '</span><span class=\"token punctuation\">,</span>\r\n      details<span class=\"token operator\">:</span> result<span class=\"token punctuation\">,</span>\r\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n  <span class=\"token punctuation\">}</span>\r\n  <span class=\"token function\">next</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>For the <code class=\"language-text\">utils</code> we create a file for it <code class=\"language-text\">./utils/validator.js</code>.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> Ajv <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'ajv'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token keyword\">const</span> ajv <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Ajv</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n<span class=\"token keyword\">function</span> <span class=\"token function\">isValid</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">input<span class=\"token punctuation\">,</span> schema</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n  <span class=\"token keyword\">const</span> validate <span class=\"token operator\">=</span> ajv<span class=\"token punctuation\">.</span><span class=\"token function\">compile</span><span class=\"token punctuation\">(</span>schema<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n  <span class=\"token keyword\">const</span> valid <span class=\"token operator\">=</span> <span class=\"token function\">validate</span><span class=\"token punctuation\">(</span>input<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>valid<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n    <span class=\"token keyword\">return</span> validate<span class=\"token punctuation\">.</span>errors<span class=\"token punctuation\">;</span>\r\n  <span class=\"token punctuation\">}</span>\r\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span> valid<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token punctuation\">}</span>\r\n\r\nmodule<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\r\n  isValid<span class=\"token punctuation\">,</span>\r\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h2>Source</h2>\n<p><a href=\"https://github.com/hamzaPixl/posts-validation\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Github</a></p>\n<p><a href=\"https://hmounir.com/pensieve/validation\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Blog</a></p>\n<h2>License</h2>\n<p>Distributed under the MIT License. See <code class=\"language-text\">LICENSE</code> for more information.</p>\n<h2>Contact</h2>\n<p>Hamza Mounir - <a href=\"https://twitter.com/pixlhamza\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">@pixlhamza</a> - <a href=\"mailto:hamza.pixelle@gmail.com\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">hamza.pixelle@gmail.com</a></p>\n<h2>Support</h2>\n<p>Give a ⭐️ if you like this post!</p>"}},{"node":{"frontmatter":{"title":"Go to production with Netlify","description":"Deploy your first website with netlify in one click.","slug":"/pensieve/netlify","date":"2021-08-11T00:00:00.000Z","tags":["Netlify","Production","Deploy","Website","Github","Integration"],"draft":false},"html":"<h2>Introduction</h2>\n<p>Nowadays creating an HTML page is so easy or even a react app, how about publishing them with a few clicks on this lovely mouse?\r\nIntegration becomes more and more the key to development using tools that helps you to move so fast on building your business. Focusing more on your productivity and let some part be managed by people who worked on it. Creating your react application is a thing going to production, we live with the website is another. With <a href=\"https://www.netlify.com/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Netlify</a> you can deploy your website with peanut configuration for any web app.</p>\n<p>Were going to see here how this integration work and how you can be live easily with Netlify. Some requirements for this, you will need to own an account on Github for the repository, and creating a free Netlify account for the deployment part. Yup, you read it it's free. You can also attach it to your custom domain and be transparent about the provider.</p>\n<h2>Creating a repository</h2>\n<p>We are going to create a simple <code class=\"language-text\">react app</code> for that and push it to our <code class=\"language-text\">repository</code>.</p>\n<p>Creating the <code class=\"language-text\">react</code> app:</p>\n<div class=\"gatsby-code-title\">bin/composer</div>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token shebang important\">#!/bin/bash</span>\r\nnpx create-react-app netlify-test</code></pre></div>\n<p>Push to the repository:</p>\n<div class=\"gatsby-code-title\">bin/composer</div>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token shebang important\">#!/bin/bash</span>\r\n<span class=\"token builtin class-name\">cd</span> netlify-test <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">git</span> push</code></pre></div>\n<h2>Netlify account</h2>\n<p>Now you need to create your Netlify account for that you just have to follow the few steps that are on their website.</p>\n<p><span\n      class=\"gatsby-resp-image-wrapper\"\n      style=\"position: relative; display: block; margin-left: auto; margin-right: auto; max-width: 700px; \"\n    >\n      <a\n    class=\"gatsby-resp-image-link\"\n    href=\"/static/2a9fa72cca52f9dff3bfa4698b9afe9c/4c53f/account.png\"\n    style=\"display: block\"\n    target=\"_blank\"\n    rel=\"noopener\"\n  >\n    <span\n    class=\"gatsby-resp-image-background-image\"\n    style=\"padding-bottom: 38.285714285714285%; position: relative; bottom: 0; left: 0; background-image: url('data:image/svg+xml,%3csvg%20xmlns=\\'http://www.w3.org/2000/svg\\'%20width=\\'400\\'%20height=\\'152\\'%20viewBox=\\'0%200%20400%20152\\'%20preserveAspectRatio=\\'none\\'%3e%3cpath%20d=\\'M0%2076v76h401V0H0v76M310%202v6l1%205h30V2l-15-1-16%201m9%2044v36l1%2035h71V46l-36-1-36%201m13%2091v5h52v-10l-26-1h-26v6\\'%20fill=\\'%23f34\\'%20fill-rule=\\'evenodd\\'/%3e%3c/svg%3e'); background-size: cover; display: block;\"\n  ></span>\n  <img\n        class=\"gatsby-resp-image-image\"\n        alt=\"Account\"\n        title=\"Account\"\n        src=\"/static/2a9fa72cca52f9dff3bfa4698b9afe9c/39600/account.png\"\n        srcset=\"/static/2a9fa72cca52f9dff3bfa4698b9afe9c/1aaec/account.png 175w,\n/static/2a9fa72cca52f9dff3bfa4698b9afe9c/98287/account.png 350w,\n/static/2a9fa72cca52f9dff3bfa4698b9afe9c/39600/account.png 700w,\n/static/2a9fa72cca52f9dff3bfa4698b9afe9c/57cd1/account.png 1050w,\n/static/2a9fa72cca52f9dff3bfa4698b9afe9c/4af54/account.png 1400w,\n/static/2a9fa72cca52f9dff3bfa4698b9afe9c/4c53f/account.png 2494w\"\n        sizes=\"(max-width: 700px) 100vw, 700px\"\n        style=\"width:100%;height:100%;margin:0;vertical-align:middle;position:absolute;top:0;left:0;\"\n        loading=\"lazy\"\n        decoding=\"async\"\n      />\n  </a>\n    </span></p>\n<p>Once you got your account you have this overview and a button where you can add a new website.</p>\n<h2>Github Integration</h2>\n<p>Here comes the integration part to your repository where you pushed yours react app before. You can link it via the button <code class=\"language-text\">New site from Git</code> after that you just have to follow the steps and connect to your <code class=\"language-text\">Github account</code> to grant access to it.</p>\n<p><span\n      class=\"gatsby-resp-image-wrapper\"\n      style=\"position: relative; display: block; margin-left: auto; margin-right: auto; max-width: 700px; \"\n    >\n      <a\n    class=\"gatsby-resp-image-link\"\n    href=\"/static/a092bec8109e6426727340d1d9ac805f/4ef60/newSite.png\"\n    style=\"display: block\"\n    target=\"_blank\"\n    rel=\"noopener\"\n  >\n    <span\n    class=\"gatsby-resp-image-background-image\"\n    style=\"padding-bottom: 49.142857142857146%; position: relative; bottom: 0; left: 0; background-image: url('data:image/svg+xml,%3csvg%20xmlns=\\'http://www.w3.org/2000/svg\\'%20width=\\'400\\'%20height=\\'196\\'%20viewBox=\\'0%200%20400%20196\\'%20preserveAspectRatio=\\'none\\'%3e%3cpath%20d=\\'M0%2098v98h401V0H0v98m92-49l-1%203c0%203%202%205%205%203h1c0%202%202%201%202-1s0-2%201%200c1%201%202%202%209%202%208%200%209-1%209-3s-1-3-3-3h-5l-14-1h-4m-1%2064c-1%203%200%204%205%204%204%200%205%200%205-2h1c0%202%201%202%203%202%203%200%204-1%204-2h1c0%202%201%202%208%202%209%200%2010%200%209-3h-6l-3-1-4%201h-1l-2-1-3-1H95c-1-2-3-1-4%201m39-1l-1%203c0%202%200%202%204%202h18l2-1h2l1-1c0%202%201%202%204%202%202%200%203%200%203-2h1c1%203%204%202%203%200l-1-2c-4%201-21%200-23-1h-13m-39%2054v5h34v-11H91v6m40%200v5h33v-10l-17-1h-16v6m38-5v6l1%204h40v-10l-20-1-21%201\\'%20fill=\\'%23f34\\'%20fill-rule=\\'evenodd\\'/%3e%3c/svg%3e'); background-size: cover; display: block;\"\n  ></span>\n  <img\n        class=\"gatsby-resp-image-image\"\n        alt=\"New\"\n        title=\"New\"\n        src=\"/static/a092bec8109e6426727340d1d9ac805f/39600/newSite.png\"\n        srcset=\"/static/a092bec8109e6426727340d1d9ac805f/1aaec/newSite.png 175w,\n/static/a092bec8109e6426727340d1d9ac805f/98287/newSite.png 350w,\n/static/a092bec8109e6426727340d1d9ac805f/39600/newSite.png 700w,\n/static/a092bec8109e6426727340d1d9ac805f/57cd1/newSite.png 1050w,\n/static/a092bec8109e6426727340d1d9ac805f/4af54/newSite.png 1400w,\n/static/a092bec8109e6426727340d1d9ac805f/4ef60/newSite.png 2496w\"\n        sizes=\"(max-width: 700px) 100vw, 700px\"\n        style=\"width:100%;height:100%;margin:0;vertical-align:middle;position:absolute;top:0;left:0;\"\n        loading=\"lazy\"\n        decoding=\"async\"\n      />\n  </a>\n    </span></p>\n<h2>Deployment</h2>\n<p>To prepare the deployment you have to set up it on the last step of your GitHub repository integration. To run our application we are going to serve the <code class=\"language-text\">build</code> and add the configuration to Netlify.</p>\n<p><span\n      class=\"gatsby-resp-image-wrapper\"\n      style=\"position: relative; display: block; margin-left: auto; margin-right: auto; max-width: 700px; \"\n    >\n      <a\n    class=\"gatsby-resp-image-link\"\n    href=\"/static/38073dcce63b1de9977672be7b1dfe31/e45c9/build.png\"\n    style=\"display: block\"\n    target=\"_blank\"\n    rel=\"noopener\"\n  >\n    <span\n    class=\"gatsby-resp-image-background-image\"\n    style=\"padding-bottom: 113.7142857142857%; position: relative; bottom: 0; left: 0; background-image: url('data:image/svg+xml,%3csvg%20xmlns=\\'http://www.w3.org/2000/svg\\'%20width=\\'400\\'%20height=\\'454\\'%20viewBox=\\'0%200%20400%20454\\'%20preserveAspectRatio=\\'none\\'%3e%3cpath%20d=\\'M0%20227v227h401V0H0v227M11%2055l62%201a729%20729%200%20000-2l-62%201m125%200l62%201a729%20729%200%20000-2l-62%201m126%200c-1%201%2020%201%2060%201a731%20731%200%20001-2l-61%201m-82%2064h-3c-2%200-4%203-2%204v1l-2-2c-1-3-4-4-6-2l-1%201c-1-3-6-2-6%200v7l1-1%202-1%203-1h1l7%201c5%200%205%200%205-2v-3l1%202c0%202%201%203%202%203%202%200%202%200%201-1l-1-4c1-2-1-4-2-2m-67%203l1%204%201-2%201-3%201%203%201%202%201-2%201-3%201%202c0%203%200%203%207%203h7v-3c-1-4-4-5-5-2l-2%203v-2c2-2%201-3-2-3s-3%200-2%201c2%201%202%202%200%203-1%202-1%202-1-1%200-2-1-3-5-3h-5v3M34%20227h-5c-1%200-2%200-2%202h-1c0-2-1-2-3-2-4%200-4%200-4%203%200%201%200%202%201%201l1-2%201%202%201-1c1-2%201-2%201%200%200%203%2011%203%2011%200%201-2%201-2%201%200s6%203%207%201h1c0%202%202%201%202-1%201-3%200-3-3-3h-9m47%2041c0%203%200%204%202%204l2-2%201-2%201%202c0%201%200%202%202%201l1%201c-1%202%202%202%204%201l3-1c2%200%202-1%202-3s0-3-4-3l-6%201h-1l-3-1c-3%201-3%201-3-1v-1l-1%204\\'%20fill=\\'%23f34\\'%20fill-rule=\\'evenodd\\'/%3e%3c/svg%3e'); background-size: cover; display: block;\"\n  ></span>\n  <img\n        class=\"gatsby-resp-image-image\"\n        alt=\"Build\"\n        title=\"Build\"\n        src=\"/static/38073dcce63b1de9977672be7b1dfe31/39600/build.png\"\n        srcset=\"/static/38073dcce63b1de9977672be7b1dfe31/1aaec/build.png 175w,\n/static/38073dcce63b1de9977672be7b1dfe31/98287/build.png 350w,\n/static/38073dcce63b1de9977672be7b1dfe31/39600/build.png 700w,\n/static/38073dcce63b1de9977672be7b1dfe31/57cd1/build.png 1050w,\n/static/38073dcce63b1de9977672be7b1dfe31/4af54/build.png 1400w,\n/static/38073dcce63b1de9977672be7b1dfe31/e45c9/build.png 1448w\"\n        sizes=\"(max-width: 700px) 100vw, 700px\"\n        style=\"width:100%;height:100%;margin:0;vertical-align:middle;position:absolute;top:0;left:0;\"\n        loading=\"lazy\"\n        decoding=\"async\"\n      />\n  </a>\n    </span></p>\n<p>You have of course some <code class=\"language-text\">logs</code> about the deployment to see if everything runs fine.</p>\n<p><span\n      class=\"gatsby-resp-image-wrapper\"\n      style=\"position: relative; display: block; margin-left: auto; margin-right: auto; max-width: 700px; \"\n    >\n      <a\n    class=\"gatsby-resp-image-link\"\n    href=\"/static/5c1c9adebcdec980ffa64084cb2f955d/8453d/deploy.png\"\n    style=\"display: block\"\n    target=\"_blank\"\n    rel=\"noopener\"\n  >\n    <span\n    class=\"gatsby-resp-image-background-image\"\n    style=\"padding-bottom: 54.85714285714286%; position: relative; bottom: 0; left: 0; background-image: url('data:image/svg+xml,%3csvg%20xmlns=\\'http://www.w3.org/2000/svg\\'%20width=\\'400\\'%20height=\\'219\\'%20viewBox=\\'0%200%20400%20219\\'%20preserveAspectRatio=\\'none\\'%3e%3cpath%20d=\\'M0%20110v109h401V0h-63v6c0%209%200%209-17%209-12%200-14%200-15-2-2-2-3-10-1-12%201-1-33-1-152-1H0v110M342%202v6l1%205h4c6%200%207-1%207-6s-1-6-6-6l-6%201m17%200v6l1%205h11V2l-6-1-6%201m18%201c-3%206-1%2010%206%2010h5V2l-6-1c-4%200-5%200-5%202M4%207c0%203-1%203%2010%203h10c0%202%202%201%203-2%201-2%200-4-1-2h-4l-3-1H8C6%203%204%204%204%207m111%2023\\'%20fill=\\'%23f34\\'%20fill-rule=\\'evenodd\\'/%3e%3c/svg%3e'); background-size: cover; display: block;\"\n  ></span>\n  <img\n        class=\"gatsby-resp-image-image\"\n        alt=\"Deploy\"\n        title=\"Deploy\"\n        src=\"/static/5c1c9adebcdec980ffa64084cb2f955d/39600/deploy.png\"\n        srcset=\"/static/5c1c9adebcdec980ffa64084cb2f955d/1aaec/deploy.png 175w,\n/static/5c1c9adebcdec980ffa64084cb2f955d/98287/deploy.png 350w,\n/static/5c1c9adebcdec980ffa64084cb2f955d/39600/deploy.png 700w,\n/static/5c1c9adebcdec980ffa64084cb2f955d/57cd1/deploy.png 1050w,\n/static/5c1c9adebcdec980ffa64084cb2f955d/4af54/deploy.png 1400w,\n/static/5c1c9adebcdec980ffa64084cb2f955d/8453d/deploy.png 2400w\"\n        sizes=\"(max-width: 700px) 100vw, 700px\"\n        style=\"width:100%;height:100%;margin:0;vertical-align:middle;position:absolute;top:0;left:0;\"\n        loading=\"lazy\"\n        decoding=\"async\"\n      />\n  </a>\n    </span></p>\n<h2>Custom domain</h2>\n<p>You can choose to add a <code class=\"language-text\">custom domain</code> to your application, you can easily found that on the settings of the website.</p>\n<p><span\n      class=\"gatsby-resp-image-wrapper\"\n      style=\"position: relative; display: block; margin-left: auto; margin-right: auto; max-width: 700px; \"\n    >\n      <a\n    class=\"gatsby-resp-image-link\"\n    href=\"/static/33a08c2b27e40b3fd8c8334d8b979b58/3d868/domain.png\"\n    style=\"display: block\"\n    target=\"_blank\"\n    rel=\"noopener\"\n  >\n    <span\n    class=\"gatsby-resp-image-background-image\"\n    style=\"padding-bottom: 53.714285714285715%; position: relative; bottom: 0; left: 0; background-image: url('data:image/svg+xml,%3csvg%20xmlns=\\'http://www.w3.org/2000/svg\\'%20width=\\'400\\'%20height=\\'216\\'%20viewBox=\\'0%200%20400%20216\\'%20preserveAspectRatio=\\'none\\'%3e%3cpath%20d=\\'M0%20108v108h401V0H0v108M313%207c-2%201-1%209%200%2010l16%201h15V6h-15l-16%201M54%2011c0%201%200%202-1%201%200-1-2-2-6-2-5%200-5%200-5%203s0%203%202%202l8-1h8l3-1h3c1%201%204%202%205%201h1l1-3c0-2%200-2-1-1h-4l-4%201h-5l-2-1h-2c-1-1-1-1-1%201m75%2063l-3%201h-4l-1%201v2l-1-2-3-1c-3%200-3%201-3%203%200%203%2014%203%2014%200%201-2%201-2%201%200s7%203%207%201h2l1-2%201%202%201-1c1-2%201-2%201%200%200%203%202%203%202-1%200-2%200-2-6-2l-8-1h-1m21%200l-2%201c-1%201-2%201-2%203%201%203%2013%203%2013%200%201-2%201-2%201%200l1%202%201-2%201-2v2c0%202%201%202%205%202%205%200%206%200%206-2l1-2v2c0%203%202%203%202%200%200-2%200-3-2-3l-3-1-1-1-1%202h-17l-1-1-1-1-1%201m-62%2090v10l12%201h12v-12h-12l-12%201\\'%20fill=\\'%23f34\\'%20fill-rule=\\'evenodd\\'/%3e%3c/svg%3e'); background-size: cover; display: block;\"\n  ></span>\n  <img\n        class=\"gatsby-resp-image-image\"\n        alt=\"Domain\"\n        title=\"Domain\"\n        src=\"/static/33a08c2b27e40b3fd8c8334d8b979b58/39600/domain.png\"\n        srcset=\"/static/33a08c2b27e40b3fd8c8334d8b979b58/1aaec/domain.png 175w,\n/static/33a08c2b27e40b3fd8c8334d8b979b58/98287/domain.png 350w,\n/static/33a08c2b27e40b3fd8c8334d8b979b58/39600/domain.png 700w,\n/static/33a08c2b27e40b3fd8c8334d8b979b58/57cd1/domain.png 1050w,\n/static/33a08c2b27e40b3fd8c8334d8b979b58/4af54/domain.png 1400w,\n/static/33a08c2b27e40b3fd8c8334d8b979b58/3d868/domain.png 2442w\"\n        sizes=\"(max-width: 700px) 100vw, 700px\"\n        style=\"width:100%;height:100%;margin:0;vertical-align:middle;position:absolute;top:0;left:0;\"\n        loading=\"lazy\"\n        decoding=\"async\"\n      />\n  </a>\n    </span></p>\n<h2>Live to production</h2>\n<p>Here it comes you have an <code class=\"language-text\">URL</code> to go with it.</p>\n<p><span\n      class=\"gatsby-resp-image-wrapper\"\n      style=\"position: relative; display: block; margin-left: auto; margin-right: auto; max-width: 700px; \"\n    >\n      <a\n    class=\"gatsby-resp-image-link\"\n    href=\"/static/c91c9cf6c30d82a9aca5347fc8083145/027d7/prod.png\"\n    style=\"display: block\"\n    target=\"_blank\"\n    rel=\"noopener\"\n  >\n    <span\n    class=\"gatsby-resp-image-background-image\"\n    style=\"padding-bottom: 60.57142857142858%; position: relative; bottom: 0; left: 0; background-image: url('data:image/svg+xml,%3csvg%20xmlns=\\'http://www.w3.org/2000/svg\\'%20width=\\'400\\'%20height=\\'243\\'%20viewBox=\\'0%200%20400%20243\\'%20preserveAspectRatio=\\'none\\'%3e%3cpath%20d=\\'M0%20122v121h401V0H0v122m182-33c-3%202-4%208-3%2014v4l-5%202c-10%205-13%2011-7%2017l8%204%203%201-1%206c-1%2014%206%2019%2018%2010l4-2%205%203c12%208%2019%204%2017-11v-5l4-1c6-2%2011-6%2011-10s-5-9-10-11l-4-1%201-7c1-14-5-18-17-10l-5%203-4-3c-7-5-12-6-15-3m1%204l-1%208v5h5c4-1%2011-6%2011-8s-9-7-12-7l-3%202m26%201c-5%203-6%205-2%209%202%202%203%203%207%203l4%201%201-4c1-11-2-13-10-9m-16%2016l-4%205-2%204%202%205c3%207%204%207%2011%208h6l4-5%203-6-2-6c-4-6-5-7-12-7l-6%202m-20%203c-8%204-7%209%201%2013%205%203%205%203%207-2%202-4%202-6%201-9-2-4-3-5-9-2m46%203c-2%205-1%2012%202%2013%202%201%2012-6%2012-8%200-3-9-9-12-9l-2%204m-24-1l-2%205c0%203%204%207%207%207l5-2%202-5-2-5-5-2-5%202m-14%2022c-1%2011%202%2014%2011%208l5-3-3-4c-2-3-4-4-7-4-6-1-6-1-6%203m30-2c-3%200-9%206-9%207s9%207%2012%207%204-3%204-9-1-7-7-5\\'%20fill=\\'%23f34\\'%20fill-rule=\\'evenodd\\'/%3e%3c/svg%3e'); background-size: cover; display: block;\"\n  ></span>\n  <img\n        class=\"gatsby-resp-image-image\"\n        alt=\"DoProdmain\"\n        title=\"DoProdmain\"\n        src=\"/static/c91c9cf6c30d82a9aca5347fc8083145/39600/prod.png\"\n        srcset=\"/static/c91c9cf6c30d82a9aca5347fc8083145/1aaec/prod.png 175w,\n/static/c91c9cf6c30d82a9aca5347fc8083145/98287/prod.png 350w,\n/static/c91c9cf6c30d82a9aca5347fc8083145/39600/prod.png 700w,\n/static/c91c9cf6c30d82a9aca5347fc8083145/57cd1/prod.png 1050w,\n/static/c91c9cf6c30d82a9aca5347fc8083145/4af54/prod.png 1400w,\n/static/c91c9cf6c30d82a9aca5347fc8083145/027d7/prod.png 2784w\"\n        sizes=\"(max-width: 700px) 100vw, 700px\"\n        style=\"width:100%;height:100%;margin:0;vertical-align:middle;position:absolute;top:0;left:0;\"\n        loading=\"lazy\"\n        decoding=\"async\"\n      />\n  </a>\n    </span></p>\n<h2>Source</h2>\n<p><a href=\"https://github.com/hamzaPixl/posts-netlify\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Github</a></p>\n<h2>License</h2>\n<p>Distributed under the MIT License. See <code class=\"language-text\">LICENSE</code> for more information.</p>\n<h2>Contact</h2>\n<p>Hamza Mounir - <a href=\"https://twitter.com/pixlhamza\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">@pixlhamza</a> - <a href=\"mailto:hamza.pixelle@gmail.com\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">hamza.pixelle@gmail.com</a></p>\n<h2>Support</h2>\n<p>Give a ⭐️ if you like this post!</p>"}}]}},"pageContext":{}},
    "staticQueryHashes": ["1151383948","1364744041","1374383533","2543263646","2604261230","3149095931","3469851102","3539500889"]}