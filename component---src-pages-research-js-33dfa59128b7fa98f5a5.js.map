{"version":3,"file":"component---src-pages-research-js-33dfa59128b7fa98f5a5.js","mappings":"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","sources":["webpack://zarif98sjs/./src/pages/research.js"],"sourcesContent":["import React, { useRef, useEffect, useState } from 'react';\r\nimport { graphql, useStaticQuery } from 'gatsby';\r\nimport PropTypes from 'prop-types';\r\nimport { Helmet } from 'react-helmet';\r\nimport styled from 'styled-components';\r\nimport { srConfig } from '@config';\r\nimport sr from '@utils/sr';\r\nimport { Layout } from '@components';\r\nimport { Icon } from '@components/icons';\r\nimport { usePrefersReducedMotion } from '@hooks';\r\nimport { GatsbyImage, getImage } from 'gatsby-plugin-image';\r\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\r\n\r\nconst StyledProjectsGrid = styled.ul`\r\n  ${({ theme }) => theme.mixins.resetList};\r\n\r\n  a {\r\n    position: relative;\r\n    z-index: 1;\r\n  }\r\n`;\r\n\r\nconst StyledProject = styled.li`\r\n  position: relative;\r\n  display: grid;\r\n  grid-gap: 10px;\r\n  grid-template-columns: repeat(12, 1fr);\r\n  align-items: center;\r\n\r\n  @media (max-width: 768px) {\r\n    ${({ theme }) => theme.mixins.boxShadow};\r\n  }\r\n\r\n  &:not(:last-of-type) {\r\n    margin-bottom: 100px;\r\n\r\n    @media (max-width: 768px) {\r\n      margin-bottom: 70px;\r\n    }\r\n\r\n    @media (max-width: 480px) {\r\n      margin-bottom: 30px;\r\n    }\r\n  }\r\n\r\n  &:nth-of-type(odd) {\r\n    .project-content {\r\n      grid-column: 7 / -1;\r\n      text-align: right;\r\n\r\n      @media (max-width: 1080px) {\r\n        grid-column: 5 / -1;\r\n      }\r\n      @media (max-width: 768px) {\r\n        grid-column: 1 / -1;\r\n        padding: 40px 40px 30px;\r\n        text-align: left;\r\n      }\r\n      @media (max-width: 480px) {\r\n        padding: 25px 25px 20px;\r\n      }\r\n    }\r\n    .project-supervisor-list {\r\n      justify-content: flex-end;\r\n\r\n      @media (max-width: 768px) {\r\n        justify-content: flex-start;\r\n      }\r\n\r\n      li {\r\n        margin: 0 0 5px 20px;\r\n\r\n        @media (max-width: 768px) {\r\n          margin: 0 10px 5px 0;\r\n        }\r\n      }\r\n    }\r\n    .project-colab-list {\r\n      justify-content: flex-end;\r\n\r\n      @media (max-width: 768px) {\r\n        justify-content: flex-start;\r\n      }\r\n\r\n      li {\r\n        margin: 0 0 5px 20px;\r\n\r\n        @media (max-width: 768px) {\r\n          margin: 0 10px 5px 0;\r\n        }\r\n      }\r\n    }\r\n    .project-links {\r\n      justify-content: flex-end;\r\n      margin-left: 0;\r\n      margin-right: -10px;\r\n\r\n      @media (max-width: 768px) {\r\n        justify-content: flex-start;\r\n        margin-left: -10px;\r\n        margin-right: 0;\r\n      }\r\n    }\r\n    .project-image {\r\n      grid-column: 1 / 6;\r\n\r\n      @media (max-width: 768px) {\r\n        grid-column: 1 / -1;\r\n      }\r\n    }\r\n  }\r\n\r\n  .project-content {\r\n    position: relative;\r\n    grid-column: 1 / 7;\r\n    grid-row: 1 / -1;\r\n\r\n    @media (max-width: 1080px) {\r\n      grid-column: 1 / 9;\r\n    }\r\n\r\n    @media (max-width: 768px) {\r\n      display: flex;\r\n      flex-direction: column;\r\n      justify-content: center;\r\n      height: 100%;\r\n      grid-column: 1 / -1;\r\n      padding: 40px 40px 30px;\r\n      z-index: 5;\r\n    }\r\n\r\n    @media (max-width: 480px) {\r\n      padding: 30px 25px 20px;\r\n    }\r\n  }\r\n\r\n  .project-overline {\r\n    margin: 10px 0;\r\n    color: ${props => props.theme.higlight};\r\n    font-family: var(--font-mono);\r\n    font-size: var(--fz-xs);\r\n    font-weight: 400;\r\n  }\r\n\r\n  .project-title {\r\n    color: ${props => props.theme.lightestslate};\r\n    font-size: clamp(24px, 5vw, 24px);\r\n\r\n    @media (min-width: 768px) {\r\n      margin: 0 0 20px;\r\n    }\r\n\r\n    @media (max-width: 768px) {\r\n      // color: ${props => props.theme.white};\r\n\r\n      a {\r\n        position: static;\r\n\r\n        &:before {\r\n          content: '';\r\n          display: block;\r\n          position: absolute;\r\n          z-index: 0;\r\n          width: 100%;\r\n          height: 100%;\r\n          top: 0;\r\n          left: 0;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  .project-description {\r\n    ${({ theme }) => theme.mixins.boxShadow};\r\n    position: relative;\r\n    z-index: 2;\r\n    padding: 25px;\r\n    border-radius: var(--border-radius);\r\n    background-color: ${props => props.theme.lightnavy};\r\n    color: ${props => props.theme.lightslate};\r\n    font-size: var(--fz-lg);\r\n\r\n    code{\r\n      color: ${props => props.theme.higlight};\r\n    }\r\n\r\n    @media (max-width: 768px) {\r\n      padding: 20px 0;\r\n      background-color: transparent;\r\n      box-shadow: none;\r\n\r\n      &:hover {\r\n        box-shadow: none;\r\n      }\r\n    }\r\n\r\n    a {\r\n      ${({ theme }) => theme.mixins.inlineLink};\r\n    }\r\n  }\r\n\r\n  .project-supervisor-list {\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    position: relative;\r\n    z-index: 2;\r\n    margin: 10px 0 10px;\r\n    padding: 0;\r\n    list-style: none;\r\n\r\n    li {\r\n      margin: 0 20px 5px 0;\r\n      color: ${props => props.theme.higlight};\r\n      font-family: var(--font-mono);\r\n      font-size: var(--fz-xs);\r\n      white-space: nowrap;\r\n      background:${props => props.theme.list_bg};\r\n      border-radius: 5px;\r\n      padding: 3px;\r\n    }\r\n\r\n    @media (max-width: 768px) {\r\n      margin: 10px 0;\r\n\r\n      li {\r\n        margin: 0 10px 5px 0;\r\n        color: ${props => props.theme.higlight};\r\n        white-space: normal;\r\n        float: left;\r\n        width: 100%;\r\n        height: auto;\r\n        word-wrap: break-word;\r\n      }\r\n    }\r\n  }\r\n\r\n  .project-colab-list {\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    position: relative;\r\n    z-index: 2;\r\n    margin:10px 0 10px;\r\n    padding: 0;\r\n    list-style: none;\r\n    \r\n\r\n    li {\r\n      margin: 0 20px 5px 0;\r\n      color: ${props => props.theme.lightestslate};\r\n      font-family: var(--font-mono);\r\n      font-size: var(--fz-xs);\r\n      white-space: normal;\r\n      float: left;\r\n      width: 100%;\r\n      height: auto;\r\n      word-wrap: break-word;\r\n    }\r\n\r\n    @media (max-width: 768px) {\r\n      margin: 10px 0;\r\n      \r\n      li {\r\n        margin: 0 10px 5px 0;\r\n        color: ${props => props.theme.lightestslate};\r\n        white-space: normal;\r\n        float: left;\r\n        width: 100%;\r\n        height: auto;\r\n        word-wrap: break-word;\r\n      }\r\n    }\r\n  }\r\n\r\n  .project-links {\r\n    display: flex;\r\n    align-items: center;\r\n    position: relative;\r\n    margin-top: 10px;\r\n    margin-left: -10px;\r\n    color: ${props => props.theme.lightestslate};\r\n\r\n    a {\r\n      ${({ theme }) => theme.mixins.flexCenter};\r\n      padding: 10px;\r\n\r\n      &.external {\r\n        svg {\r\n          width: 22px;\r\n          height: 22px;\r\n          margin-top: -4px;\r\n        }\r\n      }\r\n\r\n      svg {\r\n        width: 20px;\r\n        height: 20px;\r\n      }\r\n    }\r\n  }\r\n\r\n  .range {\r\n    margin-bottom: 20px;\r\n    color: var(--slate);\r\n    font-family: var(--font-mono);\r\n    font-size: var(--fz-xxs);\r\n  }\r\n\r\n  .supervisor {\r\n    margin-bottom: 1px;\r\n    color: ${props => props.theme.lightslate};\r\n    font-family: var(--font-mono);\r\n    font-size: var(--fz-md);\r\n  }\r\n\r\n  .collaborator {\r\n    margin-bottom: 1px;\r\n    color: ${props => props.theme.lightslate};\r\n    font-family: var(--font-mono);\r\n    font-size: var(--fz-md);\r\n  }\r\n\r\n  .project-image {\r\n    ${({ theme }) => theme.mixins.boxShadow};\r\n    grid-column: 7 / -1;\r\n    grid-row: 1 / -1;\r\n    position: relative;\r\n    z-index: 1;\r\n\r\n    @media (max-width: 768px) {\r\n      grid-column: 1 / -1;\r\n      grid-row: 2 / 2;\r\n      height: 100%;\r\n      opacity: 1;\r\n    }\r\n\r\n    a {\r\n      width: 100%;\r\n      height: 100%;\r\n      background-color: ${props => props.theme.higlight};\r\n      border-radius: var(--border-radius);\r\n      vertical-align: middle;\r\n\r\n      &:hover,\r\n      &:focus {\r\n        background: transparent;\r\n        outline: 0;\r\n\r\n        &:before,\r\n        .img {\r\n          background: transparent;\r\n          filter: none;\r\n        }\r\n      }\r\n\r\n      &:before {\r\n        content: '';\r\n        position: absolute;\r\n        width: 100%;\r\n        height: 100%;\r\n        top: 0;\r\n        left: 0;\r\n        right: 0;\r\n        bottom: 0;\r\n        z-index: 3;\r\n        transition: var(--transition);\r\n        mix-blend-mode: screen;\r\n      }\r\n    }\r\n\r\n    .img {\r\n      border-radius: var(--border-radius);\r\n      // mix-blend-mode: multiply;\r\n      // filter: grayscale(100%) contrast(1) brightness(90%);\r\n\r\n      @media (max-width: 768px) {\r\n        object-fit: cover;\r\n        width: auto;\r\n        height: 100%;\r\n        // filter: grayscale(100%) contrast(1) brightness(80%);\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst ArchivePage = ({ location }) => {\r\n\r\n\r\n  const data = useStaticQuery(graphql`\r\n  {\r\n    research: allMarkdownRemark(\r\n      filter: {\r\n        fileAbsolutePath: { regex: \"/research/\" }\r\n        frontmatter: { featured: { ne: false } }\r\n      }\r\n      sort: { fields: [frontmatter___date], order: DESC }\r\n    ) {\r\n      edges {\r\n        node {\r\n          frontmatter {\r\n            title\r\n            cover {\r\n              childImageSharp {\r\n                gatsbyImageData(\r\n                  placeholder: BLURRED\r\n                  formats: [AUTO, WEBP, AVIF]\r\n                )\r\n              }\r\n            }\r\n            supervisors\r\n            tags\r\n            colabs\r\n            range\r\n            github\r\n            external\r\n          }\r\n          html\r\n        }\r\n      }\r\n    },\r\n    personal_research: allMarkdownRemark(\r\n      filter: {\r\n        fileAbsolutePath: { regex: \"/personal_exploration/\" }\r\n        frontmatter: { featured: { ne: false } }\r\n      }\r\n      sort: { fields: [frontmatter___date], order: DESC }\r\n    ) {\r\n      edges {\r\n        node {\r\n          frontmatter {\r\n            title\r\n            cover {\r\n              childImageSharp {\r\n                gatsbyImageData(\r\n                  placeholder: BLURRED\r\n                  formats: [AUTO, WEBP, AVIF]\r\n                )\r\n              }\r\n            }\r\n            supervisors\r\n            tags\r\n            colabs\r\n            range\r\n            github\r\n            external\r\n          }\r\n          html\r\n        }\r\n      }\r\n    }\r\n  }\r\n`);\r\n\r\n\r\n\r\n  const featuredProjects = data.research.edges.filter(({ node }) => node);\r\n  const personalProjects = data.personal_research.edges.filter(({ node }) => node);\r\n  const revealTitle = useRef(null);\r\n  const revealProjects = useRef([]);\r\n  const prefersReducedMotion = usePrefersReducedMotion();\r\n\r\n  const [showMore, setShowMore] = useState(false);\r\n\r\n\r\n  useEffect(() => {\r\n    if (prefersReducedMotion) {\r\n      return;\r\n    }\r\n\r\n    sr.reveal(revealTitle.current, srConfig());\r\n    revealProjects.current.forEach((ref, i) => sr.reveal(ref, srConfig(i * 100)));\r\n  }, []);\r\n\r\n  return (\r\n    <Layout location={location}>\r\n      <Helmet title=\"Research\" />\r\n\r\n      <main>\r\n        <header ref={revealTitle} style={{marginBottom:'40px'}}>\r\n          <h1 className=\"big-heading\">Research</h1>\r\n          <p>My current research work is mostly focused on Computer Vision. I am also planning to explore Computational Neuroscience.</p>\r\n          <p className=\"subtitle\">Tags</p>\r\n          <p>#Computer Vision &nbsp; &nbsp; #Deep Learning &nbsp; &nbsp; #Object Detection &nbsp; &nbsp; #Health Informatics</p>\r\n          <p>#Natural Language Procesing &nbsp; &nbsp; #Bioinformatics</p>\r\n        </header>\r\n\r\n        <h1 className=\"medium-heading\">My Research Highlights</h1>\r\n        {/* <p className=\"subtitle\">My Research higlights ...</p> */}\r\n        <hr style={{marginBottom:'40px'}}></hr>\r\n\r\n        <StyledProjectsGrid>\r\n          {featuredProjects &&\r\n            featuredProjects.map(({ node }, i) => {\r\n              const { frontmatter, html } = node;\r\n              const { external, title, range, supervisors, tags, colabs, github, cover } = frontmatter;\r\n              const image = getImage(cover);\r\n\r\n              return (\r\n                <StyledProject key={i} ref={el => (revealProjects.current[i] = el)}>\r\n                  <div className=\"project-content\">\r\n                    <div>\r\n                      {/* <p className=\"project-overline\">Featured Project</p> */}\r\n\r\n                      <h3 className=\"project-title\">\r\n                        <a href={external}>{title}</a>\r\n                      </h3>\r\n                      <h5 className=\"range\">{range}</h5>\r\n\r\n                      <h5 className=\"supervisor\">Supervisor</h5>\r\n                      {supervisors.length && (\r\n                        <ul className=\"project-supervisor-list\">\r\n                          {supervisors.map((supervisor, i) => (\r\n                            // split supervisor name and link and display anchor tag if link is present\r\n                            <li key={i}>\r\n                              {supervisor.includes('http') ? (\r\n                                <a href={supervisor.split('||')[1]}>{supervisor.split('||')[0]}</a>\r\n                              ) : (\r\n                                supervisor\r\n                              )}\r\n                            </li>\r\n                          ))}\r\n                        </ul>\r\n                      )}\r\n\r\n\r\n                      {/* if colabs not null */}\r\n                      {colabs && colabs.length && (\r\n                        <div>\r\n                          <h5 className=\"collaborator\">Collaborators & Co-Researchers</h5>\r\n                          <ul className=\"project-colab-list\">\r\n                            {colabs.map((col, i) => (\r\n                              <li key={i}>\r\n                              {col.includes('http') ? (\r\n                                <a href={col.split('||')[1]}>{col.split('||')[0]}</a>\r\n                              ) : (\r\n                                col\r\n                              )}\r\n                            </li>\r\n                            ))}\r\n                          </ul>\r\n                        </div>\r\n                      )}\r\n\r\n                    {tags && tags.length && (\r\n                        <div>\r\n                          <h5 className=\"collaborator\">Tags</h5>\r\n                          <ul className=\"project-colab-list\">\r\n                            {tags.map((col, i) => (\r\n                              <li key={i}>{col}</li>\r\n                            ))}\r\n                          </ul>\r\n                        </div>\r\n                      )}\r\n\r\n                      <div\r\n                        className=\"project-description\"\r\n                        dangerouslySetInnerHTML={{ __html: html }}\r\n                      />\r\n\r\n                      <div className=\"project-links\">\r\n                        {github && (\r\n                          <a href={github} aria-label=\"GitHub Link\">\r\n                            <Icon name=\"GitHub\" />\r\n                          </a>\r\n                        )}\r\n                        {external && (\r\n                          <a href={external} aria-label=\"External Link\" className=\"external\">\r\n                            <Icon name=\"External\" />\r\n                          </a>\r\n                        )}\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"project-image\">\r\n                    <a href={external ? external : github ? github : '#'}>\r\n                      <GatsbyImage image={image} alt={title} className=\"img\" />\r\n                    </a>\r\n                  </div>\r\n                </StyledProject>\r\n              );\r\n            })}\r\n        </StyledProjectsGrid>\r\n\r\n        <h1 className=\"medium-heading\" style={{marginTop:'50px'}}>Personal Exploration</h1>\r\n        <hr style={{marginBottom:'40px'}}></hr>\r\n        <StyledProjectsGrid>\r\n          {personalProjects &&\r\n            personalProjects.map(({ node }, i) => {\r\n              const { frontmatter, html } = node;\r\n              const { external, title, range, supervisors, tags, colabs, github, cover } = frontmatter;\r\n              const image = getImage(cover);\r\n\r\n              return (\r\n                <StyledProject key={i} ref={el => (revealProjects.current[i] = el)}>\r\n                  <div className=\"project-content\">\r\n                    <div>\r\n                      {/* <p className=\"project-overline\">Featured Project</p> */}\r\n\r\n                      <h3 className=\"project-title\">\r\n                        <a href={external}>{title}</a>\r\n                      </h3>\r\n                      <h5 className=\"range\">{range}</h5>\r\n\r\n                      \r\n                      {supervisors && supervisors.length && (\r\n                        <div>\r\n                        <h5 className=\"supervisor\">Supervisor</h5>\r\n                        <ul className=\"project-supervisor-list\">\r\n                          {supervisors.map((supervisor, i) => (\r\n                            <b><li key={i}>{supervisor}</li></b>\r\n                          ))}\r\n                        </ul>\r\n                        </div>\r\n                      )}\r\n\r\n\r\n                      {/* if colabs not null */}\r\n                      {colabs && colabs.length && (\r\n                        <div>\r\n                          <h5 className=\"collaborator\">Collaborators & Co-Researchers</h5>\r\n                          <ul className=\"project-colab-list\">\r\n                            {colabs.map((col, i) => (\r\n                              <li key={i}>{col}</li>\r\n                            ))}\r\n                          </ul>\r\n                        </div>\r\n                      )}\r\n\r\n                    {tags && tags.length && (\r\n                        <div>\r\n                          <h5 className=\"collaborator\">Tags</h5>\r\n                          <ul className=\"project-colab-list\">\r\n                            {tags.map((col, i) => (\r\n                              <li key={i}>{col}</li>\r\n                            ))}\r\n                          </ul>\r\n                        </div>\r\n                      )}\r\n\r\n                      <div\r\n                        className=\"project-description\"\r\n                        dangerouslySetInnerHTML={{ __html: html }}\r\n                      />\r\n\r\n                      <div className=\"project-links\">\r\n                        {github && (\r\n                          <a href={github} aria-label=\"GitHub Link\">\r\n                            <Icon name=\"GitHub\" />\r\n                          </a>\r\n                        )}\r\n                        {external && (\r\n                          <a href={external} aria-label=\"External Link\" className=\"external\">\r\n                            <Icon name=\"External\" />\r\n                          </a>\r\n                        )}\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"project-image\">\r\n                    <a href={external ? external : github ? github : '#'}>\r\n                      <GatsbyImage image={image} alt={title} className=\"img\" />\r\n                    </a>\r\n                  </div>\r\n                </StyledProject>\r\n              );\r\n            })}\r\n        </StyledProjectsGrid>\r\n      </main>\r\n    </Layout>\r\n  );\r\n};\r\nArchivePage.propTypes = {\r\n  location: PropTypes.object.isRequired,\r\n  data: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default ArchivePage;\r\n"],"names":["StyledProjectsGrid","styled","theme","mixins","resetList","StyledProject","boxShadow","props","higlight","lightestslate","lightnavy","lightslate","inlineLink","list_bg","flexCenter","location","data","useStaticQuery","featuredProjects","research","edges","filter","node","personalProjects","personal_research","revealTitle","useRef","revealProjects","prefersReducedMotion","usePrefersReducedMotion","useState","useEffect","sr","current","srConfig","forEach","ref","i","title","style","marginBottom","className","map","frontmatter","html","external","range","supervisors","tags","colabs","github","cover","image","getImage","key","el","href","length","supervisor","includes","split","col","dangerouslySetInnerHTML","__html","name","G","alt","marginTop"],"sourceRoot":""}